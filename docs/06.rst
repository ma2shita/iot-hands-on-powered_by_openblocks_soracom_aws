あとかたづけ＆自習室
====================

AWSリソース
-----------

本ハンズオンで作成したAWSリソース等は継続的に費用がかかるものがあるため、不要ならば削除するようにしてください

* AWS IoT

  * ルール
  * 証明書

    #. アタッチされている "モノ" とポリシをデタッチ
    #. 証明書のDeactivate

  * "モノ"
  * ポリシ

* AWS Lambda function

  * IAMロール

* Amazon ESインスタンス (課金されるので注意)

.. _bx1_reset:

BX1の初期化
-----------

下記コマンドを **シリアルコンソールから** 実行してください

.. code-block:: none

  /srv/reset/reset_bx1.sh yes

やりかたがわからない場合はチューターにご相談ください

自習室
======

参考サイト
----------

* `太陽光パネルの発電量をAWS IoTとAmazon Elasticsearch Serviceを使って可視化してみる <http://qiita.com/ToshiakiEnami/items/7b4b3090f3687979d21a>`_

.. _sensordata:

センサーデータフォーマット
--------------------------

センサーデータは、BX1を通過すると下記のようなJSONデータとなります
このフォーマットをAWS IoT内のRule Engineや、Lambdaで処理することが可能です
(jqを使って整形済み。コメントは付与されません)

富士通コンポーネント社製 温度・加速度センサーデバイス "FWM8BLZ02"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: json

    {
      "deviceId": "e73a40839d8a",              // BX1の設定画面で設定したデバイスID (BX1で付与)
      "time": "2016-03-09T18:15:53.764+0900",  // 計測日時 (BX1で付与)
      "temperature": 27.22,                    // 温度 ℃
      "accelX": 0.092,                         // X方向 加速度 G
      "accelY": -0.952,                        // Y方向 加速度 G
      "accelZ": -0.113                         // Z方向 加速度 G
    }

また、AWS IoTのDevice shadowで取得すると ``state`` 等、AWS IoTの属性が付与されます

.. code-block:: json

    {
      "state": {
        "reported": {
          "deviceId": "e73a40839d8a",
          "time": "2016-03-09T18:15:53.764+0900",
          "temperature": 27.22,
          "accelX": 0.092,
          "accelY": -0.952,
          "accelZ": -0.113
        }
      }
    }

Texas Instruments社製 多機能/開発用センサー sensorTag CC2541
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: json

    {
      "deviceId": "5c313ec027e1", // BX1の設定画面で設定したデバイスID (BX1で付与)
      "humidity": 40.7,           // 湿度 %
      "temperature": 28.6,        // 温度 ℃ (湿度センサー内)
      "objectTemp": 23.8,         // 物体温度 ℃
      "ambientTemp": 28.4,        // 周辺温度 ℃
      "gyroX": -1.4,              // ジャイロ(X軸) deg/s <角速度>
      "gyroY": 4,                 // ジャイロ(Y軸) deg/s
      "gyroZ": 0.2,               // ジャイロ(Z軸) deg/s
      "pressure": 1015.6,         // 気圧 hPa
      "accelX": 0.1,              // 加速度(X軸) G
      "accelY": 0.3,              // 加速度(Y軸) G
      "accelZ": 3.8,              // 加速度(Z軸) G
      "magX": -53.9,              // 地磁気(X軸) μT <テスラ>
      "magY": -5.2,               // 地磁気(Y軸) μT
      "magZ": 102.7,              // 地磁気(Z軸) μT
      "time": "2015-11-19T10:29:20.529+0900" // 計測日時(BX1で付与)
    }

また、AWS IoTのDevice shadowで取得すると ``state`` 等、AWS IoTの属性が付与されます

.. code-block:: json

    {
      "state": {
        "reported": {
          "deviceId": "5c313ec027e1",
          "humidity": 40.7,
          "temperature": 28.6,
          "objectTemp": 23.8,
          "ambientTemp": 28.4,
          "gyroX": -1.4,
          "gyroY": 4,
          "gyroZ": 0.2,
          "pressure": 1015.6,
          "accelX": 0.1,
          "accelY": 0.3,
          "accelZ": 3.8,
          "magX": -53.9,
          "magY": -5.2,
          "magZ": 102.7,
          "time": "2015-11-19T10:29:20.529+0900"
        }
      }
    }

BX1へシリアルコンソールでログインする
-------------------------------------

BX1 は給電用USB ケーブルが、シリアルコンソールを兼任しています

FTDIのシリアルポートドライバがインストール済みのWindows / Mac OS Xや、Linuxならば追加ドライバ不要でアクセス可能です

+----------+----------------------------------------------+
| ID       | ``root``                                     |
+----------+----------------------------------------------+
| Password | ``0BSI0T`` (ゼロ ビー エス アイ ゼロ ティー) |
+----------+----------------------------------------------+

e.g.) screen コマンドによるアクセス

.. code-block:: none

  screen /dev/ttyUSB0 115200

